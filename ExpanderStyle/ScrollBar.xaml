<UserControl x:Class="ExpanderStyle.ScrollBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ExpanderStyle"
             mc:Ignorable="d">
    <UserControl.Resources>

        <SolidColorBrush Color="#1BE24E" x:Key="ProgressForeGround" />
        <SolidColorBrush Color="White" x:Key="FontColor" />
        <SolidColorBrush Color="#CDCDCD" x:Key="LightBackground" />
        <SolidColorBrush Color="#3B3B3B" x:Key="DarkBackGround" />
        <SolidColorBrush Color="#292929" x:Key="DarkerBackGround" />

        <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Grid.Column="0">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Content="{TemplateBinding ContentControl.Content}" />
                            </Border>
                            <ScrollBar Name="PART_VerticalScrollBar" Style="{DynamicResource VerticalScrollBarStyle}"
                             Orientation="Vertical" Grid.Row="0" Grid.Column="1" Minimum="0"
                             Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                             Value="{TemplateBinding ScrollViewer.VerticalOffset}"
                             ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                             Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal"
                             Style="{DynamicResource HorizontalScrollBarStyle}" Grid.Row="1" Grid.Column="0" Minimum="0"
                             Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                             Value="{TemplateBinding ScrollViewer.HorizontalOffset}"
                             ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                             Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background">
                <Setter.Value>
                    <!--<SolidColorBrush Color="#DFDFDF" />-->
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Offset="0.45" Color="Transparent" />
                        <GradientStop Offset="0.55" Color="#3B3B3B" />
                        <GradientStop Offset="0.62" Color="Transparent" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="15"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Border Background="{TemplateBinding Control.Background}" BorderBrush="#00FFFFFF" BorderThickness="1" CornerRadius="5">
                            <Track Name="PART_Track" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb>
                                        <FrameworkElement.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Name="Border" CornerRadius="2" Background="{StaticResource DarkerBackGround}" BorderBrush="{StaticResource DarkBackGround}" BorderThickness="1" Width="8">
                                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" Orientation="Vertical">
                                                                    <Rectangle Margin="0,2,0,0" Fill="{StaticResource DarkBackGround}" Height="1" Width="Auto"/>
                                                                    <Rectangle Margin="0,2,0,0" Fill="{StaticResource DarkBackGround}" Height="1" Width="Auto"/>
                                                                    <Rectangle Margin="0,2,0,0" Fill="{StaticResource DarkBackGround}" Height="1" Width="Auto"/>
                                                                </StackPanel>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="true">
                                                                    <Setter TargetName="Border" Value="{StaticResource LightBackground}" Property="Border.Background"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </FrameworkElement.Style>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background">
                <Setter.Value>
                    <!--<SolidColorBrush Color="#DFDFDF" />-->
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Offset="0.45" Color="Transparent" />
                        <GradientStop Offset="0.55" Color="#3B3B3B" />
                        <GradientStop Offset="0.62" Color="Transparent" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="8"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Border Background="{TemplateBinding Control.Background}" BorderBrush="#00FFFFFF" BorderThickness="1"
                    CornerRadius="3">
                            <Track Name="PART_Track" IsDirectionReversed="false">
                                <Track.Thumb>
                                    <Thumb>
                                        <FrameworkElement.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Name="Border" CornerRadius="3" Background="{StaticResource DarkerBackGround}" BorderBrush="{StaticResource DarkBackGround}" BorderThickness="1">
                                                                <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Center" Orientation="Horizontal">
                                                                    <Rectangle Margin="1.5" Fill="{StaticResource DarkBackGround}" Width="1" Height="Auto"/>
                                                                    <Rectangle Margin="1.5" Fill="{StaticResource DarkBackGround}" Width="1" Height="Auto"/>
                                                                    <Rectangle Margin="1.5" Fill="{StaticResource DarkBackGround}" Width="1" Height="Auto"/>
                                                                </StackPanel>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="true">
                                                                    <Setter TargetName="Border" Value="{StaticResource LightBackground}" 
                                                                        Property="Border.Background"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </FrameworkElement.Style>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="TrackBackground" Grid.Row="0" Margin="10,0" BorderThickness="2" BorderBrush="LightGray"
                      VerticalAlignment="Center" Height="4"/>
                            <Track x:Name="PART_Track" Grid.Row="0">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource FlatBtn}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource FlatBtn}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb>
                                        <FrameworkElement.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Grid Background="#FF34b4e3">
                                                                <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Center" Orientation="Horizontal">
                                                                    <Rectangle Margin="1.5" Fill="White" Width="1" Height="10"/>
                                                                    <Rectangle Margin="1.5" Fill="White" Width="1" Height="10"/>
                                                                    <Rectangle Margin="1.5" Fill="White" Width="1" Height="10"/>
                                                                </StackPanel>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </FrameworkElement.Style>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" 
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" 
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBoxStyle2" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource DarkBackGround}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkerBackGround}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkerBackGround}" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" 
                                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " 
                                          Fill="{StaticResource LightBackground}" Margin="1" Opacity="0" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Path.RenderTransform>
                                            <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                        </Path.RenderTransform>
                                        </Path>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource LightBackground}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource DarkerBackGround}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource DarkerBackGround}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource DarkerBackGround}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource DarkerBackGround}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource LightBackground}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource LightBackground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Border BorderThickness="1.5" BorderBrush="Black">
        <Grid>
            <ScrollViewer Height="200" Style="{StaticResource ScrollViewerStyle}">
                <ItemsControl >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.Items>

                        <CheckBox IsChecked="True" Width="100" Content="Designed" Style="{DynamicResource CheckBoxStyle2}" />
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}" />
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>
                        <CheckBox IsChecked="True" Width="150" Content="Check Box 1" Style="{StaticResource CheckBoxStyle2}"/>

                    </ItemsControl.Items>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
    </Border>
</UserControl>
